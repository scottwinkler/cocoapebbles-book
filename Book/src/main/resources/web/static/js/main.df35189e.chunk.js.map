{"version":3,"sources":["serviceWorker.js","themes/withRoot.js","utility/utility.js","components/cards/book.jsx","components/cards/book.js","components/views/home.jsx","components/views/home.js","constants/actions.js","actions/home.js","containers/home.js","components/app/app.js","reducers/index.js","reducers/home.js","index.js"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","light","blue","main","dark","secondary","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","CssBaseline_default","isNullOrUndefined","obj","undefined","Book","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getTotalCharacters","pages","totalCharacters","length","lastPage","numNewlines","split","updateHelperText","content","parsePages","totalPages","setState","save","setEditing","id","book","_this$state","state","title","author","isNew","createBook","removeNewBook","updateBook","splitString","string","size","multiline","arguments","re","RegExp","delete","deleteBook","parts","includes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","part","value","newPages","concat","err","return","bool","editing","onChange","e","defineProperty","target","name","renderSummary","classes","className","container","column","index_es","classNames","textfield","margin","flex","hide","onClick","Delete_default","flexContainer","renderDetails","fullwidth","textarea","replace","cancel","join","_this2","card","expandIcon","ExpandMore_default","color","withStyles","root","selected","backgroundColor","padding","display","width","height","borderRadius","border","minHeight","flexBasis","minWidth","marginRight","marginBottom","marginTop","fontSize","whiteSpace","withTheme","Home","newBook","componentWillMount","bookId","kvs","router","search","kv_pair","key","refreshBooks","createEmptyBook","renderBooks","books","map","index","uuid","Math","floor","random","cards_book","_this$props","booksSavedList","booksUnsavedList","allBooksList","variant","icons_index_es","flexGrow","BOOKS","BOOKS_LOADING","href","charAt","substr","API_URL","dispatch","booksLoading","endpoint","fetch","method","then","res","json","type","payload","catch","console","log","finally","_ref","body","JSON","stringify","headers","Content-Type","_ref2","_ref3","connect","bindActionCreators","App","Switch","Route","exact","path","component","rootReducer","combineReducers","action","history","createBrowserHistory","logger","createLogger","store","createStore","connectRouter","applyMiddleware","thunk","routerMiddleware","ReactDOM","render","es","lib","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df35189e.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n//import red from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n        light: blue[500],\n        main: blue[700],\n        dark: blue[900],\n    },\n    secondary: {\n        light: blue[500],\n        main: blue[700],\n        dark: blue[900],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","export function isNullOrUndefined(obj){\n    return obj===null || obj===undefined\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    ExpansionPanel,\n    ExpansionPanelSummary,\n    ExpansionPanelDetails,\n    ExpansionPanelActions,\n    Typography,\n    Divider,\n    Button,\n    TextField,\n    IconButton,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport withRoot from '../../themes/withRoot';\nimport { styles } from './book.js';\nimport { isNullOrUndefined } from '../../utility/utility.js'\n\nclass Book extends Component {\n    constructor(props) {\n        super(props);\n        let content = props.book.pages.join(\"<br/>\");\n        this.state = {\n            title: props.book.title,\n            content: content,\n            author: props.book.author,\n            editing: false,\n            totalPages: props.book.pages.length,\n            totalCharacters: this.getTotalCharacters(props.book.pages),\n        }\n    }\n    getTotalCharacters=(pages)=>{\n        let totalCharacters=0;\n        if(pages.length>0){\n            totalCharacters = (pages.length-1)*255;\n            let lastPage = pages[pages.length-1];\n            if(isNullOrUndefined(lastPage)){\n                lastPage=\"\"\n            }\n            let numNewlines = lastPage.split(\"\\n\").length-1;\n            if(isNullOrUndefined(numNewlines)||numNewlines<0){\n                numNewlines=0;\n            }\n            let augmentedLength = lastPage.length+numNewlines;\n            totalCharacters+=augmentedLength;\n        }\n        return totalCharacters;\n    }\n\n    updateHelperText=(content)=>{\n        let pages = this.parsePages(content)\n        let totalPages = pages.length;\n        let totalCharacters = this.getTotalCharacters(pages);\n        this.setState({totalPages:totalPages,totalCharacters:totalCharacters})\n    }\n\n    save = () => {\n        this.setEditing(false);\n        const { id } = this.props.book;\n        const { title, content, author } = this.state;\n        let pages = this.parsePages(content);\n        if(this.props.isNew){\n            this.props.createBook({book:{id:\"\",author:author,title:title,pages:pages}});\n            this.props.removeNewBook()\n        }else{\n            this.props.updateBook({ book: { id: id, author: author, title: title, pages: pages } })\n        }\n        }\n\n    splitString = (string, size, multiline = true) => {\n        var matchAllToken = (multiline === true) ? '[^]' : '.';\n        var re = new RegExp(matchAllToken + '{1,' + size + '}', 'g');\n        return string.match(re);\n    }\n\n    delete = ()=>{\n        this.setEditing(false);\n        this.props.deleteBook({book:this.props.book});\n        if(this.props.isNew){\n            this.props.removeNewBook();\n        }\n    }\n\n    parsePages = (content) => {\n        //respect page split on <br/>\n        let parts;\n        if (content.includes(\"<br/>\")) {\n            parts = content.split(\"<br/>\");\n        } else {\n            parts = [content];\n        }\n\n        let pages = [];\n        for (let part of parts) {\n            //maximum allowed character per page is 255 and newlines count as 2\n            let newPages = this.splitString(part, 255);\n            pages = pages.concat(newPages);\n        }\n        return pages;\n    }\n\n    setEditing = (bool) => {\n        this.setState({ editing: bool })\n    }\n\n    onChange = e => { \n        this.setState({ [e.target.name]: e.target.value })\n        if(e.target.name===\"content\"){\n            this.updateHelperText(e.target.value);\n        }\n    }\n\n    renderSummary = (classes) => {\n        if (this.state.editing) {\n            return (\n                <div className={classes.container}>\n                    <div className={classes.column}>\n                        <Typography >title</Typography>\n                        <TextField\n                            name=\"title\"\n                            onChange={this.onChange}\n                            value={this.state.title}\n                            className={classNames(classes.textfield)}\n                            margin=\"none\"\n                        />\n                    </div>\n                    <div className={classes.column}>\n                        <Typography  className={classNames(classes.textfield)}>author</Typography>\n                        <TextField\n                            name=\"author\"\n                            onChange={this.onChange}\n                            value={this.state.author}\n                            margin=\"none\"\n                        />\n                    </div>\n                    <div className={classes.flex} />\n                    <IconButton\n                            className={classNames({ [`${classes.hide}`]: !this.state.editing })}\n                            onClick={() => { this.delete() }}\n                        >\n                            <DeleteIcon/>\n                        </IconButton>\n                </div>\n            )\n        } else {\n            return (\n                <div className={classes.flexContainer}>\n                    <div className={classNames(classes.title)}>{'\"'+this.state.title+'\", id: '+this.props.book.id}</div>\n                    <div className={classes.flex} />\n                    <div className={classNames(classes.author)}>{\"written by \" + this.state.author}</div>\n                </div>\n            )\n        }\n    }\n    renderDetails = (classes) => {\n        if (this.state.editing) {\n            return (\n                <div className={classes.fullwidth}>\n                    <Typography  >content [pages: {this.state.totalPages}/50, characters: {this.state.totalCharacters}/12800]</Typography>\n                    <textarea\n                        name=\"content\"\n                        value={this.state.content}\n                        onChange={this.onChange}\n                        className={classNames(classes.textarea)} />\n                </div>\n            )\n        }\n        else {\n            let content = this.state.content;\n            content = content.replace(new RegExp(\"<br/>\",\"g\"), \"\")\n            return (\n                <div className={classes.content}>\n                    {content}\n                </div>\n            )\n        }\n    }\n\n    cancel=()=>{\n        const book = this.props.book;\n        let content = book.pages.join(\"<br/>\"); \n        this.setState({ title: book.title,\n            content: content,\n            author: book.author,\n            editing: false,\n            totalPages: book.pages.length,\n            totalCharacters: this.getTotalCharacters(book.pages),})\n    }\n\n    render() {\n        const {  classes } = this.props\n        const { editing } = this.state;\n        return (\n            <div className={classNames(classes.card)}>\n                <ExpansionPanel>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        {this.renderSummary(classes)}\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        {this.renderDetails(classes)}\n                    </ExpansionPanelDetails>\n                    <Divider />\n                    <ExpansionPanelActions>\n                        <Button\n                            size=\"small\"\n                            className={classNames({ [`${classes.hide}`]: !editing })}\n                            onClick={() => { this.cancel() }}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            className={classNames({ [`${classes.hide}`]: !editing })}\n                            onClick={() => { this.save() }}>\n                            Save\n                        </Button>\n                        <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            className={classNames({ [`${classes.hide}`]: editing })}\n                            onClick={() => { this.setEditing(true) }}\n                        >\n                            Edit\n                        </Button>\n                    </ExpansionPanelActions>\n                </ExpansionPanel>\n\n\n            </div>\n        )\n    }\n}\n\n\nBook.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    book: PropTypes.object.isRequired,\n    updateBook: PropTypes.func.isRequired,\n    deleteBook: PropTypes.func.isRequired,\n    createBook: PropTypes.func.isRequired,\n    //isNew: PropTypes.boolean,\n    removeNewBook: PropTypes.func,\n};\n\nexport default withRoot(withStyles(styles, { withTheme: true })(Book));","export const styles = theme => ({\n    root: {\n        margin: \"20px\",\n    },\n    selected: {\n        backgroundColor: \"LightBlue\"\n    },\n    card: {\n        padding: \"20px\"\n    },\n    hide: {\n        display: \"none\",\n    },\n    textarea: {\n        width:\"100%\",\n        height:\"100%\",\n        borderRadius: \"5px\",\n        border: \"thin dotted #333\",\n        minHeight: \"100px\"\n    },\n    fullwidth: {\n        width:\"100%\"\n    },\n    container: {\n        display: \"flex\",\n    },\n    column: {\n        flexBasis: '50%',\n    },\n    textfield: {\n        minWidth: \"200px\",\n        marginRight:\"20px\"\n    },\n    author: {\n        marginBottom:\"auto\",\n        marginTop:\"auto\",\n    },\n    title: {\n        fontSize: \"24px\"\n    },\n    flexContainer: {\n        display: \"flex\",\n        width: \"100%\"\n    },\n    flex: {\n        flex: \"1\",\n    },\n    content: {\n        whiteSpace:\"pre-line\"\n    }\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    IconButton,\n    Typography,\n    Toolbar\n} from '@material-ui/core';\nimport {\n    Refresh as RefreshIcon,\n    Add as AddIcon,\n} from '@material-ui/icons';\nimport withRoot from '../../themes/withRoot';\nimport { styles } from './home.js';\nimport Book from '../cards/book.jsx';\nimport { isNullOrUndefined } from '../../utility/utility.js'\nclass Home extends Component {\n    state = {\n        newBook: null\n    };\n    componentWillMount = () => {\n        const kvs = this.props.router.location.search.split(\"&\")\n        let bookId\n        for (let kv of kvs) {\n          const kv_pair = kv.split(\"=\")\n          const key = kv_pair[0]\n          const value = kv_pair[1]\n          if (key.includes(\"bookId\")){\n             bookId = value;\n          }\n          this.props.refreshBooks({bookId:bookId})\n        }\n    }\n\n    createEmptyBook = () => {\n        let newBook = {author:\"Unknown\",pages:[],title:\"Untitled\",id:\"N/A\"}\n        this.setState({newBook:newBook});\n    }\n\n    renderBooks = (books,isNew) => {\n        if (isNullOrUndefined(books)) {\n            return null\n        }\n        return books.map((book, index) => {\n            let uuid=null;\n            if (isNullOrUndefined(book.id)){\n                uuid =  Math.floor(Math.random()*90000) + 10000;\n            } else{\n                uuid = book.id;\n            }\n            return (\n                <Book\n                    key={uuid}\n                    index={index}\n                    book={book}\n                    updateBook={this.props.updateBook}\n                    deleteBook={this.props.deleteBook}\n                    createBook={this.props.createBook}\n                    isNew ={isNew}\n                    removeNewBook={this.removeNewBook}\n                />\n            )\n        })\n    }\n    removeNewBook=()=>{\n        this.setState({newBook:null})\n    }\n    render() {\n        const { books,  classes } = this.props;\n        const booksSavedList = this.renderBooks(books,false)\n        let booksUnsavedList = [];\n        if(!isNullOrUndefined(this.state.newBook)){\n            booksUnsavedList = this.renderBooks([this.state.newBook],true)\n        }\n        const allBooksList = booksUnsavedList.concat(booksSavedList)\n        return (\n            <div className={classNames(classes.root)}>\n                <Toolbar>\n                     <Typography variant=\"h5\">Cocoapebble's Book Mod</Typography>\n                    <div className={classes.flex}/>\n                    <IconButton onClick={() => { this.createEmptyBook() }} >\n                        <AddIcon />\n                    </IconButton>\n                    <IconButton onClick={() => { this.props.refreshBooks() }} >\n                        <RefreshIcon />\n                    </IconButton>\n                </Toolbar>\n                {allBooksList}\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    refreshBooks: PropTypes.func.isRequired,\n    books: PropTypes.array.isRequired,\n    updateBook: PropTypes.func.isRequired,\n    deleteBook: PropTypes.func.isRequired,\n    createBook: PropTypes.func.isRequired,\n};\n\n\nexport default withRoot(withStyles(styles, { withTheme: true })(Home));","export const styles = theme => ({\n    root: {\n      margin: \"20px\",\n    },\n    flex: {\n      flexGrow: 1\n    }\n  });\n","export const BOOKS = 'BOOKS';\nexport const BOOKS_LOADING = 'BOOKS_LOADING'\nlet href = window.location.href;\nif (href.charAt(href.length - 1) == '/') {\n  href = href.substr(0, href.length - 1);\n}\nexport const API_URL= href;","import {\n    BOOKS,\n    BOOKS_LOADING,\n    API_URL,\n} from '../constants/actions.js';\n\n//books\nexport function refreshBooks() {\n    return (dispatch) => {\n        dispatch(booksLoading(true));\n        dispatch(listBooks());\n    }\n}\n\nexport function updateBook({book}){\n    return (dispatch) =>{\n        const endpoint = `${API_URL}/books/${book.id}`;\n        fetch(endpoint,{\n                method: 'PATCH',\n                body: JSON.stringify(book),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n        })\n        .then(res=>{\n            dispatch(refreshBooks())\n        })\n        .catch(\n            e => {console.log(e);}\n        )\n    }\n}\n\nexport function createBook({ book }) {\n    return (dispatch) => {\n        const endpoint = `${API_URL}/books/`;\n        fetch(endpoint,{\n                method: 'POST',\n                body: JSON.stringify(book),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n        }).then(res=>{\n            dispatch(refreshBooks())\n        })\n        .catch(\n            e => {console.log(e);}\n        )\n    }\n}\n\nexport function deleteBook({ book }) {\n    //console.log(JSON.stringify(book));\n    return (dispatch) => {\n        const endpoint = `${API_URL}/books/`;\n        fetch(endpoint,{\n                method: 'DELETE',\n                body: JSON.stringify(book),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n        }).then(res=>{\n            dispatch(refreshBooks())\n        })\n        .catch(\n            e => {console.log(e);}\n        )\n    }\n}\n\nfunction listBooks() {\n    return (dispatch) => {\n        const endpoint = `${API_URL}/books/`;\n        fetch(endpoint, { method: 'GET', })\n            .then(res => {\n                res.json().then((json) => {\n                    dispatch(books(json));\n                })\n            })\n            .catch(e => { console.log(e); })\n            .finally(() => {\n                dispatch(booksLoading(false));\n            })\n    }\n}\n\n\nexport function booksLoading(bool) {\n    return {\n        type: BOOKS_LOADING,\n        payload: bool\n    }\n}\n\n\nexport function books(booksList) {\n    return {\n        type: BOOKS,\n        payload: booksList\n    }\n}","import {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport Home from '../components/views/home.jsx'\nimport {\n    createBook,\n    refreshBooks,\n    updateBook,\n    deleteBook,\n} from '../actions/home.js';\n\nconst mapStateToProps=(state)=>{\n   \nreturn{\n    books: state.books.books,\n    router: state.router,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n      refreshBooks: bindActionCreators(refreshBooks,dispatch),\n      createBook: bindActionCreators(createBook,dispatch),\n      updateBook: bindActionCreators(updateBook,dispatch),\n      deleteBook: bindActionCreators(deleteBook,dispatch),\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from '../../containers/home.js';\nconst App = () => (\n    <div>\n    <Switch>\n        <Route exact path ='/' component={Home} />\n    </Switch>\n    </div>\n);\n\nexport default App;","import {combineReducers} from 'redux';\nimport {books,booksLoading} from './home.js';\nconst rootReducer=combineReducers({\n   books:combineReducers({books,booksLoading}),\n})\nexport default rootReducer;","import {BOOKS,BOOKS_LOADING} from '../constants/actions.js'\n\n//books\nexport function books(state=[],action){\n    switch(action.type){\n        case BOOKS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\nexport function booksLoading(state=false,action){\n    switch(action.type){\n        case BOOKS_LOADING:\n        return action.payload;\n        default:\n        return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport App from './components/app/app';\nimport rootReducer from './reducers/index';\nimport { createBrowserHistory } from 'history'\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router'\n\nconst history = createBrowserHistory()\nconst logger = createLogger();\n\nconst store = createStore(\n    connectRouter(history)(rootReducer),\n    applyMiddleware(thunk, logger, routerMiddleware(history))\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}